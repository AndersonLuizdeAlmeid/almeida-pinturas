// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaintCalculation.WebApi.Data;

#nullable disable

namespace PaintCalculation.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250415162530_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaintCalculation.WebApi.Models.Measure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("PaintCalculation.WebApi.Models.SeparateMeasure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<long>("MeasureId")
                        .HasColumnType("bigint");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MeasureId");

                    b.ToTable("SeparateMeasure");
                });

            modelBuilder.Entity("PaintCalculation.WebApi.Models.SeparateMeasure", b =>
                {
                    b.HasOne("PaintCalculation.WebApi.Models.Measure", "Measure")
                        .WithMany("Separates")
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measure");
                });

            modelBuilder.Entity("PaintCalculation.WebApi.Models.Measure", b =>
                {
                    b.Navigation("Separates");
                });
#pragma warning restore 612, 618
        }
    }
}
